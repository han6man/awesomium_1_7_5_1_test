<Window 
    x:Class="WPFJavascriptSample.MainWindow" 
    x:Name="mainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:awe="http://schemas.awesomium.com/winfx"
    xmlns:data="http://schemas.awesomium.com/winfx/data"
    xmlns:core="http://schemas.awesomium.com/core"
    MinHeight="480"
    MinWidth="640"
    Height="768" 
    Width="1024">
    <Window.Title>
        <Binding 
            Path="Title" 
            ElementName="webControl" 
            StringFormat="WPF Javascript Sample - {0}" />
    </Window.Title>
    <Window.Resources>
        <awe:WebSessionProvider x:Key="webSession">
            <awe:WebSessionProvider.DataSources>
                <data:ResourceDataSourceProvider x:Key="local" />
            </awe:WebSessionProvider.DataSources>
        </awe:WebSessionProvider>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <awe:WebControl 
            Name="webControl" 
            Margin="5"
            WebSession="{Binding Source={StaticResource webSession}}" 
            Source="asset://local/web/index.html" 
            ConsoleMessage="webControl_ConsoleMessage" 
            NativeViewInitialized="webControl_NativeViewInitialized" />
        <ScrollViewer Grid.Column="1" Margin="5">
            <StackPanel 
                TextBlock.FontSize="16" 
                TextBlock.LineHeight="20" 
                TextBlock.LineStackingStrategy="BlockLineHeight">
                <TextBlock TextWrapping="Wrap">
                    This control will present the images already loaded in the web page. We ask for these images using JavaScript interoperation. 
                    The images are provided asynchronously in base64 format, simulating a time consuming operation.
                </TextBlock>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="220" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock TextWrapping="Wrap" Margin="0,5">
                        <Bold>Scenario 1:</Bold><LineBreak />
                        In this scenario, the page loaded contains the JavaScript code to get the images' data
                        and is <Bold>aware</Bold> of our application, therefore it calls our global object with the response.
                    </TextBlock>
                    <Button Grid.Column="1" x:Name="scenario1" MaxWidth="200" Margin="0,10" Padding="5" VerticalAlignment="Center" Click="scenario1_Click">
                        Load Images
                    </Button>
                    <TextBlock Grid.Row="1" TextWrapping="Wrap" Margin="0,5">
                        <Bold>Scenario 2:</Bold><LineBreak />
                        In this scenario, the page loaded contains the JavaScript code to get the images' data
                        but it is <Bold>not aware</Bold> of our application. We have to pass a callback.
                    </TextBlock>
                    <Button Grid.Row="1" Grid.Column="1" x:Name="scenario2" MaxWidth="200" Margin="0,10" Padding="5" VerticalAlignment="Center" Click="scenario2_Click">
                        Load Images
                    </Button>
                    <TextBlock Grid.Row="2" TextWrapping="Wrap" Margin="0,5">
                        <Bold>Scenario 3:</Bold><LineBreak />
                        In this final scenario, the page loaded <Bold>does not</Bold> contain the JavaScript code to get the images' data
                        nor is it aware of our application. We inject JavaScript that will do the job.
                    </TextBlock>
                    <Button Grid.Row="2" Grid.Column="1" x:Name="scenario3" MaxWidth="200" Margin="0,10" Padding="5" VerticalAlignment="Center" Click="scenario3_Click">
                        Load Images
                    </Button>
                </Grid>
                <TextBlock Margin="0,5" FontWeight="Bold" Text="Images:" />
                <ItemsControl ItemsSource="{Binding PageImages, ElementName=mainWindow}" SnapsToDevicePixels="True">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="ImageSource">
                            <Image 
                                x:Name="imageControl"
                                Width="150" 
                                Height="150" 
                                Margin="20,10" 
                                Source="{Binding}" 
                                Stretch="UniformToFill"
                                RenderOptions.BitmapScalingMode="Fant"/>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                    <Setter TargetName="imageControl" Property="Source" Value="/WPFJavascriptSample;component/images/default-no-image.png" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </ScrollViewer>
        <Border Grid.Row="1" Grid.ColumnSpan="2" BorderBrush="Black" BorderThickness="0,1">
            <TextBlock Text="Console:" Padding="5,2"/>
        </Border>
        <TextBox 
            Grid.Row="2" 
            Grid.ColumnSpan="2"
            x:Name="consoleBox" 
            IsReadOnly="True"
            Height="150" 
            Background="Black" 
            Foreground="LightGray"
            VerticalScrollBarVisibility="Auto"/>
    </Grid>
</Window>
